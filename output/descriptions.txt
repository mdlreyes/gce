fiducial.npy
    > ia_model = 'maoz10'
    > imf_model = 'kroupa93'
    > AGB_source = 'kar'
    > Ia_source = 'leu20'
    > II_source = 'nom06'
    > datasource = 'deimos'
    > 1e6 steps over 32 walkers

fiducial_long.npy
    > same params as fiducial.npy, except 1e7 steps over 32 walkers

fiducial_combinedsample.npy
    > same params as fiducial.npy, except datasource = 'both'

agb_fruity.npy
    > same params as fiducial.npy, except AGB_source = 'cri15'

ccsn_nom13.npy
    > same params as fiducial.npy, except II_source = 'nom13'

empiricaltest_combinedsample.npy
    > ia_model = 'maoz10'
    > imf_model = 'kroupa93'
    > fitting the following extra variables to parameterize yields: 
        > fe_ia, cexp_ii, mgnorm_ii, canorm_ii, cnorm_agb
    > datasource = 'both'
    > 1e6 steps over 32 walkers

empiricaltest_combinedsample_short.npy
    > same params as empiricaltest_combinedsample.npy
    > 1e5 steps over 32 walkers

empiricaltest_nofe.npy
    > same params as empiricaltest_combinedsample.npy, but not fitting Fe
    > datasource = 'both'
    > 1e5 steps over 32 walkers

empiricaltest_withbaeu_short.npy
    > same params as empiricaltest_combinedsample.npy, but also fitting Ba/Eu (no r-process removal)
    > datasource = 'both'
    > 1e5 steps over 32 walkers

empiricaltest_noc_short.npy
    > same params as empiricaltest_combinedsample.npy, but not fitting C
    > datasource = 'both'
    > 1e5 steps over 32 walkers

empiricaltest_nofe_baeu_short.npy
    > same params as empiricaltest_combinedsample.npy, but not fitting Fe
    > also fitting Ba (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 1e5 steps over 32 walkers

empiricaltest_withfeba_short.npy
    > same params as empiricaltest_combinedsample.npy
    > also fitting Ba (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 1e5 steps over 32 walkers

empiricaltest_dartba_short.npy
    > same params as empiricaltest_combinedsample.npy
    > also fitting Ba from DART only (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 1e5 steps over 32 walkers

empiricaltest_dartba.npy
    > same params as empiricaltest_combinedsample.npy
    > also fitting Ba from DART only (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 1e6 steps over 32 walkers

empiricaltest_dartba_ba_short.npy
    > same params as empiricaltest_combinedsample.npy, plus additional params for Ba yields
    > also fitting Ba from DART only (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 1e5 steps over 32 walkers

empiricaltest_dartba_ba.npy
    > same params as empiricaltest_combinedsample.npy, plus additional params for Ba yields
    > also fitting Ba from DART only (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 1e6 steps over 32 walkers

empiricaltest_nofe_dartba_short.npy
    > same params as empiricaltest_combinedsample.npy, plus additional params for Ba yields
    > also fitting Ba from DART only (removing r-process contribution using statistical correction)
    > not fitting Fe
    > datasource = 'both'
    > 1e5 steps over 32 walkers

empiricaltest_bothba_ba.npy
    > same params as empiricaltest_combinedsample.npy, plus additional params for Ba yields
    > also fitting Ba from both DART & DEIMOS (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 1e6 steps over 32 walkers

sfdelay_med.npy
    > same as empiricaltest_bothba_ba, but with a 50 Myr delay applied to SF
    > datasource = 'both'
    > 5e5 steps over 32 walkers

iaDTD_lownorm_med.npy
    > same as empiricaltest_bothba_ba, but with Maoz+17 Ia DTD (lower normalization than Maoz+10)
    > datasource = 'both'
    > 5e5 steps over 32 walkers

iaDTD_highmindelay_med.npy
    > same as empiricaltest_bothba_ba, but with Maoz+10 Ia DTD and min delay time = 0.5 Gyr
    > datasource = 'both'
    > 5e5 steps over 32 walkers

iaDTD_lowmindelay_med.npy
    > same as empiricaltest_bothba_ba, but with Maoz+10 Ia DTD and min delay time = 0.05 Gyr
    > datasource = 'both'
    > 5e5 steps over 32 walkers

iaDTD_medhimindelay_med.npy
    > same as empiricaltest_bothba_ba, but with Maoz+10 Ia DTD and min delay time = 0.2 Gyr
    > datasource = 'both'
    > 5e5 steps over 32 walkers

sfdelay_med.npy
    > same as empiricaltest_bothba_ba, but with gas infall turned off after 0.6 Gyr (to simulate heating from reionization)
    > datasource = 'both'
    > 5e5 steps over 32 walkers

rampressure_med.npy
    > same as empiricaltest_bothba_ba, but with a simplified ram pressure stripping model (including free parameter describing constant gas outflow)
    > datasource = 'both'
    > 5e5 steps over 32 walkers

iaDTD_lowindex_med.npy
    > same as empiricaltest_bothba_ba, but with Maoz+10 Ia DTD and power-law index = -0.5
    > datasource = 'both'
    > 5e5 steps over 32 walkers

iaDTD_highindex_med.npy
    > same as empiricaltest_bothba_ba, but with Maoz+10 Ia DTD and power-law index = -1.5
    > datasource = 'both'
    > 5e5 steps over 32 walkers

iaDTD_cutoff_med.npy
    > same as empiricaltest_bothba_ba, but with a broken power-law Ia DTD
    > datasource = 'both'
    > 5e5 steps over 32 walkers

iaDTD_cutoff_long.npy
    > same as empiricaltest_bothba_ba, but with a broken power-law Ia DTD
    > datasource = 'both'
    > 1e6 steps over 32 walkers

imf_chabrier03_med.npy
    > same as empiricaltest_bothba_ba, but with a Chabrier+03 IMF instead of Kroupa+93
    > datasource = 'both'
    > 5e5 steps over 32 walkers

imf_salpeter55_med.npy
    > same as empiricaltest_bothba_ba, but with a Salpeter+55 IMF instead of Kroupa+93
    > datasource = 'both'
    > 5e5 steps over 32 walkers

mgcheck.npy
    > same params as empiricaltest_bothba_ba, but without the +0.2 dex for Mg
    > also fitting Ba from both DART & DEIMOS (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 5e5 steps over 32 walkers

bapriorcheck.npy
    > same params as empiricaltest_bothba_ba, but with really wide prior for Ba
    > (and removing the +0.2 dex for Mg)
    > also fitting Ba from both DART & DEIMOS (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 5e5 steps over 32 walkers

bapriorcheck_gaussian.npy
    > same params as empiricaltest_bothba_ba, but with Gaussian prior for Ba mean (mean=2, sigma=0.5)
    > (and removing the +0.2 dex for Mg)
    > also fitting Ba from both DART & DEIMOS (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 5e5 steps over 32 walkers

bapriorcheck_gaussian_sigma25.npy
    > same params as empiricaltest_bothba_ba, but with Gaussian prior for Ba mean (mean=2, sigma=0.25)
    > (and removing the +0.2 dex for Mg)
    > also fitting Ba from both DART & DEIMOS (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 5e5 steps over 32 walkers

bapriorcheck_gaussian_dartonly.npy
    > same params as empiricaltest_dartba_ba, but with Gaussian prior for Ba mean (mean=2, sigma=0.25)
    > (and removing the +0.2 dex for Mg)
    > fitting Ba from just DART! (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 5e5 steps over 32 walkers

final_withmgas.npy
    > same params as empiricaltest_dartba_ba, but with Gaussian prior for Ba mean (mean=2, sigma=0.25)
    > (and removing the +0.2 dex for Mg)
    > fitting Ba from just DART! (removing r-process contribution using statistical correction)
    > datasource = 'both'
    > 1e6 steps over 32 walkers

final_withoutmgas_short.npy
    > same params as final_withmgas, but without Mgas0 as a fitting parameter
    > datasource = 'both'
    > 1e5 steps over 32 walkers

final_withoutmgas_med.npy
    > same params as final_withmgas, but without Mgas0 as a fitting parameter
    > datasource = 'both'
    > 5e5 steps over 32 walkers

test.npy
    > same as final_without_mgas_med, using restructured code